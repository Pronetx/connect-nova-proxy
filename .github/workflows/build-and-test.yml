name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-voice-gateway:
    name: Build Voice Gateway
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: voice-gateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Configure Maven settings for mjSIP
        run: |
          mkdir -p ~/.m2
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>' > ~/.m2/settings.xml

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run tests
        run: mvn test

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: voice-gateway-jar
          path: voice-gateway/target/*.jar
          retention-days: 7

  build-connect-integration:
    name: Build Connect Integration
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: connect-integration

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run tests
        run: mvn test

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: connect-integration-jar
          path: connect-integration/target/*.jar
          retention-days: 7

  build-lambda:
    name: Build Lambda Function
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: lambdas/prepareExternalTransfer

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: lambdas/prepareExternalTransfer/package.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if available)
        run: npm test || echo "No tests defined"
        continue-on-error: true

      - name: Create deployment package
        run: |
          zip -r function.zip index.mjs package.json node_modules

      - name: Upload Lambda artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-function
          path: lambdas/prepareExternalTransfer/function.zip
          retention-days: 7

  build-cdk:
    name: Build CDK Infrastructure
    runs-on: ubuntu-latest

    strategy:
      matrix:
        cdk-stack: [cdk-ecs, cdk-ec2-instance]

    defaults:
      run:
        working-directory: infra/${{ matrix.cdk-stack }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: infra/${{ matrix.cdk-stack }}/package.json

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build || npx tsc

      - name: CDK Synth
        run: npx cdk synth
        env:
          CDK_DEFAULT_ACCOUNT: '123456789012'
          CDK_DEFAULT_REGION: 'us-east-1'

  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check shell scripts syntax
        run: |
          find scripts -name "*.sh" -exec bash -n {} \;

      - name: Check shell scripts are executable
        run: |
          find scripts -name "*.sh" -exec test -x {} \; || (echo "Some scripts are not executable. Run: chmod +x scripts/*.sh" && exit 1)

      - name: Markdown lint
        uses: DavidAnson/markdownlint-cli2-action@v15
        with:
          globs: '**/*.md'
        continue-on-error: true

  integration-test:
    name: Integration Test (Placeholder)
    runs-on: ubuntu-latest
    needs: [build-voice-gateway, build-connect-integration, build-lambda]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Download voice gateway artifact
        uses: actions/download-artifact@v4
        with:
          name: voice-gateway-jar
          path: voice-gateway/target

      - name: Placeholder integration test
        run: |
          echo "Integration tests would run here"
          echo "Example: Start gateway, simulate SIP call, verify Connect attributes"
          echo "See scripts/local-call-sim.sh and scripts/push-attrs-test.js"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true
